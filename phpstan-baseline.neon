parameters:
	ignoreErrors:
		-
			message: "#^Call to an undefined static method T of object\\:\\:from\\(\\)\\.$#"
			count: 1
			path: src/Bridges/Enum/EnumBridge.php

		-
			message: "#^Call to function assert\\(\\) with true will always evaluate to true\\.$#"
			count: 1
			path: src/Bridges/MarcMabeEnum/MarcMabeEnumBridge.php

		-
			message: "#^Call to function is_subclass_of\\(\\) with class\\-string\\<T of MabeEnum\\\\Enum\\> and 'MabeEnum\\\\\\\\Enum' will always evaluate to true\\.$#"
			count: 1
			path: src/Bridges/MarcMabeEnum/MarcMabeEnumBridge.php

		-
			message: "#^Call to function assert\\(\\) with true will always evaluate to true\\.$#"
			count: 1
			path: src/Bridges/MyCLabsEnum/MyCLabsEnumBridge.php

		-
			message: "#^Call to function is_subclass_of\\(\\) with class\\-string\\<T of MyCLabs\\\\Enum\\\\Enum\\<bool\\|float\\|int\\|string\\>\\> and 'MyCLabs\\\\\\\\Enum\\\\\\\\Enum' will always evaluate to true\\.$#"
			count: 1
			path: src/Bridges/MyCLabsEnum/MyCLabsEnumBridge.php

		-
			message: "#^Property BrandEmbassy\\\\Doctrine\\\\EnumType\\\\Bridges\\\\Enum\\\\User\\:\\:\\$id is never written, only read\\.$#"
			count: 1
			path: tests/Bridges/Enum/User.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'BrandEmbassy\\\\\\\\Doctrine\\\\\\\\EnumType\\\\\\\\Bridges\\\\\\\\MarcMabeEnum\\\\\\\\User' and MabeEnum\\\\Enum\\|null will always evaluate to false\\.$#"
			count: 1
			path: tests/Bridges/MarcMabeEnum/MarcMabeEnumBridgeTest.php

		-
			message: "#^Parameter \\#1 \\$entityName of method BrandEmbassy\\\\Doctrine\\\\EnumType\\\\DatabaseManager\\<MabeEnum\\\\Enum\\>\\:\\:getRepository\\(\\) expects class\\-string\\<MabeEnum\\\\Enum\\>, string given\\.$#"
			count: 1
			path: tests/Bridges/MarcMabeEnum/MarcMabeEnumBridgeTest.php

		-
			message: "#^Class BrandEmbassy\\\\Doctrine\\\\EnumType\\\\Bridges\\\\MarcMabeEnum\\\\User has an uninitialized readonly property \\$id\\. Assign it in the constructor\\.$#"
			count: 1
			path: tests/Bridges/MarcMabeEnum/User.php

		-
			message: "#^Property BrandEmbassy\\\\Doctrine\\\\EnumType\\\\Bridges\\\\MarcMabeEnum\\\\User\\:\\:\\$id is never written, only read\\.$#"
			count: 1
			path: tests/Bridges/MarcMabeEnum/User.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'BrandEmbassy\\\\\\\\Doctrine\\\\\\\\EnumType\\\\\\\\Bridges\\\\\\\\MyCLabsEnum\\\\\\\\User' and MyCLabs\\\\Enum\\\\Enum\\<bool\\|float\\|int\\|string\\>\\|null will always evaluate to false\\.$#"
			count: 1
			path: tests/Bridges/MyCLabsEnum/MyCLabsEnumBridgeTest.php

		-
			message: "#^Parameter \\#1 \\$entityName of method BrandEmbassy\\\\Doctrine\\\\EnumType\\\\DatabaseManager\\<MyCLabs\\\\Enum\\\\Enum\\<bool\\|float\\|int\\|string\\>\\>\\:\\:getRepository\\(\\) expects class\\-string\\<MyCLabs\\\\Enum\\\\Enum\\<bool\\|float\\|int\\|string\\>\\>, 'BrandEmbassy\\\\\\\\Doctrine\\\\\\\\EnumType\\\\\\\\Bridges\\\\\\\\MyCLabsEnum\\\\\\\\User' given\\.$#"
			count: 1
			path: tests/Bridges/MyCLabsEnum/MyCLabsEnumBridgeTest.php

		-
			message: "#^Property BrandEmbassy\\\\Doctrine\\\\EnumType\\\\Bridges\\\\MyCLabsEnum\\\\User\\:\\:\\$id is never written, only read\\.$#"
			count: 1
			path: tests/Bridges/MyCLabsEnum/User.php

		-
			message: "#^Property BrandEmbassy\\\\Doctrine\\\\EnumType\\\\Car\\:\\:\\$id is never written, only read\\.$#"
			count: 1
			path: tests/Car.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'BrandEmbassy\\\\\\\\Doctrine\\\\\\\\EnumType\\\\\\\\Bridges\\\\\\\\MarcMabeEnum\\\\\\\\User' and MabeEnum\\\\Enum\\|null will always evaluate to false\\.$#"
			count: 1
			path: tests/EnumTypeTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'BrandEmbassy\\\\\\\\Doctrine\\\\\\\\EnumType\\\\\\\\Car' and MabeEnum\\\\Enum\\|null will always evaluate to false\\.$#"
			count: 1
			path: tests/EnumTypeTest.php

		-
			message: "#^Parameter \\#1 \\$entityName of method BrandEmbassy\\\\Doctrine\\\\EnumType\\\\DatabaseManager\\<MabeEnum\\\\Enum\\>\\:\\:getRepository\\(\\) expects class\\-string\\<MabeEnum\\\\Enum\\>, string given\\.$#"
			count: 2
			path: tests/EnumTypeTest.php